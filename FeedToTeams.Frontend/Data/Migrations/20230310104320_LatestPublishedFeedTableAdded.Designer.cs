// <auto-generated />
using System;
using FeedToTeams.Frontend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FeedToTeams.Frontend.Data.Migrations
{
    [DbContext(typeof(FeedToTeamsDbContext))]
    [Migration("20230310104320_LatestPublishedFeedTableAdded")]
    partial class LatestPublishedFeedTableAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FeedToTeams.Frontend.Models.FeedModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ChannelEndpoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("RSSFeedURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Feeds");
                });

            modelBuilder.Entity("FeedToTeams.Frontend.Models.MsalAccountActivityModel", b =>
                {
                    b.Property<string>("AccountCacheKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountObjectId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountTenantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FailedToAcquireToken")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastActivity")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserPrincipalName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountCacheKey");

                    b.ToTable("MsalAccountActivities");
                });

            modelBuilder.Entity("FeedToTeams.Frontend.Models.PublishedFeedModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("FeedModelId")
                        .HasColumnType("int");

                    b.Property<string>("LatestPublishedUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FeedModelId")
                        .IsUnique();

                    b.ToTable("PublishedFeeds");
                });

            modelBuilder.Entity("FeedToTeams.Frontend.Models.PublishedFeedModel", b =>
                {
                    b.HasOne("FeedToTeams.Frontend.Models.FeedModel", "FeedModel")
                        .WithOne("PublishedFeedModel")
                        .HasForeignKey("FeedToTeams.Frontend.Models.PublishedFeedModel", "FeedModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FeedModel");
                });

            modelBuilder.Entity("FeedToTeams.Frontend.Models.FeedModel", b =>
                {
                    b.Navigation("PublishedFeedModel");
                });
#pragma warning restore 612, 618
        }
    }
}
